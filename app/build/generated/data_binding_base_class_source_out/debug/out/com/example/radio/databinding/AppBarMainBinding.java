// Generated by view binder compiler. Do not edit!
package com.example.radio.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.example.radio.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AppBarMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final FrameLayout container;

  @NonNull
  public final ImageView imageView10;

  @NonNull
  public final ImageView img;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final TextView txtview45;

  private AppBarMainBinding(@NonNull ConstraintLayout rootView, @NonNull FrameLayout container,
      @NonNull ImageView imageView10, @NonNull ImageView img, @NonNull ConstraintLayout main,
      @NonNull TextView txtview45) {
    this.rootView = rootView;
    this.container = container;
    this.imageView10 = imageView10;
    this.img = img;
    this.main = main;
    this.txtview45 = txtview45;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AppBarMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AppBarMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.app_bar_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AppBarMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.container;
      FrameLayout container = rootView.findViewById(id);
      if (container == null) {
        break missingId;
      }

      id = R.id.imageView10;
      ImageView imageView10 = rootView.findViewById(id);
      if (imageView10 == null) {
        break missingId;
      }

      id = R.id.img;
      ImageView img = rootView.findViewById(id);
      if (img == null) {
        break missingId;
      }

      id = R.id.main_;
      ConstraintLayout main = rootView.findViewById(id);
      if (main == null) {
        break missingId;
      }

      id = R.id.txtview45;
      TextView txtview45 = rootView.findViewById(id);
      if (txtview45 == null) {
        break missingId;
      }

      return new AppBarMainBinding((ConstraintLayout) rootView, container, imageView10, img, main,
          txtview45);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
