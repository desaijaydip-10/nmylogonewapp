// Generated by view binder compiler. Do not edit!
package com.example.radio.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.example.radio.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentRequestBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView backArrow;

  @NonNull
  public final CardView cardview1;

  @NonNull
  public final RecyclerView recyclerview1;

  @NonNull
  public final ConstraintLayout toolbar1;

  private FragmentRequestBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView backArrow,
      @NonNull CardView cardview1, @NonNull RecyclerView recyclerview1,
      @NonNull ConstraintLayout toolbar1) {
    this.rootView = rootView;
    this.backArrow = backArrow;
    this.cardview1 = cardview1;
    this.recyclerview1 = recyclerview1;
    this.toolbar1 = toolbar1;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentRequestBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentRequestBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_request, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentRequestBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.back_arrow;
      ImageView backArrow = rootView.findViewById(id);
      if (backArrow == null) {
        break missingId;
      }

      id = R.id.cardview1;
      CardView cardview1 = rootView.findViewById(id);
      if (cardview1 == null) {
        break missingId;
      }

      id = R.id.recyclerview1;
      RecyclerView recyclerview1 = rootView.findViewById(id);
      if (recyclerview1 == null) {
        break missingId;
      }

      id = R.id.toolbar1;
      ConstraintLayout toolbar1 = rootView.findViewById(id);
      if (toolbar1 == null) {
        break missingId;
      }

      return new FragmentRequestBinding((ConstraintLayout) rootView, backArrow, cardview1,
          recyclerview1, toolbar1);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
